# Rapha MVP Specification

## App Overview
**Rapha** is a React Native mobile application (built with Expo Go/EAS) that delivers AI-powered personalized spiritual journeys through daily devotionals, community engagement, journaling, and Bible study tools.

## Core Architecture

### Technology Stack
- **Framework**: React Native with Expo Go
- **Build/Deploy**: EAS servers → TestFlight → App Store
- **Backend**: Supabase
- **Payment**: Superwall or Stripe integration
- **AI Integration**: For content generation and personalization

### Navigation Structure
Bottom tab navigation with 4 primary sections:
1. **Daily** (Devotional)
2. **Community** 
3. **Journal**
4. **Bible**

## Detailed Feature Specifications

### 1. Daily Devotional Tab
**Core Components:**
- **Bible Verse Section** (1-2 min read time)
- **Devotional Content** (2-3 min read time) 
- **Prayer Section** (1 min read time)

**AI Personalization Logic:**
- Weekly thematic approach (prevents repetition/staleness)
- Context-aware based on user profile + previous devotions
- Focused themes that build progressively rather than overgeneralized daily content
- User can request specific topics via daily popup

**UI/UX Requirements:**
- Clean, readable typography optimized for extended reading
- Progress indicators for each section
- Smooth transitions between verse → devotional → prayer
- Completion checkmark with celebratory micro-animation (0.2s duration)

### 2. Community Tab
**MVP Features:**
- **Share Devotionals**: Users can post their completed devotionals
- **Comment System**: Threaded conversations on shared devotionals
- **Feed View**: Chronological/algorithmic feed of community posts

**UI/UX Requirements:**
- Card-based layout for posts
- Consistent commenting interface across all posts
- Pull-to-refresh with loading animations
- Smooth scroll performance with lazy loading

### 3. Journal Tab
**Core Features:**
- **Free-form Journaling**: Open text editor for any content
- **Devotional Reflection**: Dedicated space linked to daily devotional
- **AI Prompt Suggestions**: Personalized journaling prompts based on user profile
- **Entry History**: Organized view of past journal entries

**UI/UX Requirements:**
- Distraction-free writing environment
- Auto-save functionality with subtle visual feedback
- Calendar/timeline view for entry navigation
- Smooth keyboard handling and text input animations

### 4. Bible Tab
**Core Features:**
- **Complete Bible Text**: Full biblical text with book/chapter/verse navigation
- **Search Functionality**: Traditional verse/keyword search
- **AI-Powered Search**: Theme-based search ("show me verses about hope")
- **Verse Bookmarking**: Save favorite passages

**UI/UX Requirements:**
- Fast, responsive text rendering
- Intuitive search interface with predictive suggestions
- Smooth scrolling through long text passages
- Visual distinction between regular and AI search results

## Critical User Flows

### Onboarding Flow
**Multi-screen Process:**
1. Welcome/app introduction
2. Spiritual background questionnaire (3-4 screens)
3. Personal preferences (reading time, topics, etc.)
4. Goals and intentions setting
5. Account creation with celebration animation
6. Hard paywall integration
7. First devotional preview

**Design Principles:**
- One key question per screen (avoid overwhelm)
- Progress indicator throughout
- Smooth transitions between screens
- "Magic moment" animation upon completion

### Daily Popup System
**Triggers:** App open, push notification response, or manual access
**Components:**
- Progress tracking visualization (streak counter, completion status)
- Mood/status check-in
- Option to request specific devotional topics
- Quick access to incomplete sections

**Animation Requirements:**
- Gentle slide-up entrance (0.2s)
- Celebration effects for streak milestones
- Smooth transitions between popup states

### Progress Tracking System
**Core Metrics:**
- Daily completion streaks
- Weekly devotional themes completed
- Journal entries written
- Community engagement levels

**Gamification Elements:**
- Visual progress rings/bars
- Milestone celebrations with particle effects
- Achievement badges with unlock animations
- Habit formation feedback loops

**UI Implementation:**
- Persistent progress indicators across relevant screens
- Celebratory animations for completions (confetti, glow effects)
- Streak recovery encouragement for missed days

## Design System Specifications

### Animation Standards
- **Universal Duration**: 0.2s for all micro-interactions
- **Easing**: Smooth, natural curves (ease-out recommended)
- **Interactive Feedback**: Every tap, swipe, and gesture gets visual response
- **State Changes**: Animated transitions for loading, success, error states

### Spatial Consistency
- **Component Positioning**: Maintain consistent placement across screens
- **Navigation Elements**: Fixed positions for mental mapping
- **Content Hierarchy**: Consistent spacing and alignment throughout
- **Transition Continuity**: Elements should visually "move" rather than disappear/reappear

### Minimalism Principles
- **Progressive Disclosure**: Complex features introduced gradually
- **Visual Hierarchy**: Clear information prioritization
- **White Space**: Generous spacing for breathing room
- **Content Focus**: UI should never compete with spiritual content

## Settings & Profile Management
**Core Features:**
- Edit all onboarding responses
- Notification preferences
- Reading preferences (font size, theme)
- Account management
- Privacy settings
- Subscription management

**UI Requirements:**
- Organized in logical sections
- Inline editing where possible
- Clear save/cancel states with animations
- Confirmation dialogs for destructive actions

## Technical Considerations

### Performance Requirements
- **App Launch**: Under 3 seconds to first meaningful content
- **Content Loading**: Smooth AI content generation with loading states
- **Animation Performance**: Maintain 60fps during all transitions
- **Offline Capability**: Cache recent devotionals and journal entries

### Data Management
- **User Profiles**: Secure storage of onboarding data in Supabase
- **Content Caching**: Smart caching for devotionals and Bible text
- **Sync Functionality**: Cross-device synchronization for progress and journal entries
- **AI Context**: Maintain devotional history for personalization
- **Real-time Features**: Supabase real-time subscriptions for community features